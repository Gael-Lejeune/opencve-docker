from flask import current_app as app
from flask import request, render_template
from flask_login import current_user, login_required


from opencve.controllers.main import main
from opencve.controllers.clients import ClientController
from opencve.utils import get_clients_letters
from opencve.models.clients import Client
import uuid
from flask import Flask, flash, request, redirect, url_for
from werkzeug.utils import secure_filename

UPLOAD_FOLDER = '/app/venv/lib/python3.7/site-packages/opencve/data'
ALLOWED_EXTENSIONS = {'xlsx'}
def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@main.route("/clients")
def clients():
    clients, _, pagination = ClientController.list(request.args)
    return render_template(
        "clients.html",
        clients=clients,
        letters=get_clients_letters(),
        pagination=pagination,
    )


import os
from flask_login import current_user
from opencve.controllers.clients import read_excel
@main.route("/client/<client_name>")
def client(client_name):
    client=Client.query.filter_by(name=client_name).first()
    return render_template(
        "client.html",
        client=client,
    )

@main.route("/client/<client_name>", methods=['GET', 'POST'])
@login_required
def upload_file(client_name):
    client=Client.query.filter_by(name=client_name).first()
    if request.method == 'POST':
        # check if the post request has a file field
        if 'file' not in request.files:
            flash('No file part')
            return redirect(request.url)
        file = request.files['file']
        # If the user does not select a file, the browser submits an empty file without a filename.
        if file.filename == '':
            flash('No selected file')
            return redirect(request.url)
        if not allowed_file(file.filename):
            flash('File Format Not Allowed')
            return redirect(request.url)
        if file:
            extensions = secure_filename(file.filename).split(".")[1]
            filename = str(uuid.uuid4())+"."+str(extensions)
            app.config['UPLOAD_FOLDER']=UPLOAD_FOLDER
            path_to_file=os.path.join(app.config['UPLOAD_FOLDER'], filename)
            # file.save(secure_filename(path_to_file))
            if read_excel(client ,file) == -1:
                flash('Excel file not containing "vendor", "product" and "version" rows')
            else:
                flash(f'File Uploaded and products added to client {client}')
            return redirect(request.url)
    return redirect(request.url)
import datetime

import click
from flask import current_app as app
from flask.cli import with_appcontext
from sqlalchemy.exc import IntegrityError

from opencve.commands import ensure_config, error, info
from opencve.extensions import db
from opencve.models.clients import Client
from opencve.models.products import Product
from opencve.models.vendors import Vendor


@click.command()
@click.argument("client")
@click.argument("vendor")
@click.argument("product")
@with_appcontext
def add_product_to_client(client, vendor, product):
    """Add Product to client"""
    client_query = Client.query.filter_by(name=client).first().id
    if not client_query:
        raise click.BadParameter(
            f"{client} does not exists in Clients", param_hint="client")
    print(client_query)
    vendor_query = Vendor.query.filter_by(name=vendor).first().id
    if not vendor_query:
        raise click.BadParameter(
            f"{vendor} does not exists in Vendors", param_hint="vendor")
    print(vendor_query)
    product_query = Product.query.filter_by(
        name=product, vendor_id=vendor_query).first().id
    if not product_query:
        raise click.BadParameter(
            f"{product} does not exists in Products", param_hint="product")
    print(product_query)

    db.session.execute("INSERT INTO clients_products(client_id,product_id) VALUES (('" +
                       str(client_query)+"'),('"+str(product_query)+"'))")

    try:
        db.session.commit()
    except IntegrityError as e:
        error(e)
    else:
        info("[ADD_PRODUCT_TO_CLIENT] Product " +
             str(product)+" added to client "+str(client))
